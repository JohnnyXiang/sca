<?php 
	$catalogHelper = $this->helper('catalog/output');
	$scaHelper = $this->helper('dan_sca');
	$_product = $this->getProduct();
	
	$stateId = $catalogHelper->productAttribute($_product, $_product->getStateId(), 'state_id');
	$animalId = $catalogHelper->productAttribute($_product, $_product->getAnimalId(), 'animal_id');
	$details = $scaHelper->getProductGameunitsAndDetails($stateId, $animalId);

	$selText = "-- Select --"; 

	// store raw choices (for the first dropdown) in the $weapon_choices array
	$weapon_choices = [];
	
	// store the gameunit choices (for the second dropdown) in a separate array with Weapon Choice as the key
	$weapon_choices_gameunits = [];
	
	$_gameunit = '';
	$_firstPass = false;
	foreach($details as $_detail){
		$_weapon = $_detail->getWeapon();
		if($_detail->getYear() == 'current'){
			$_gameunit = $_detail->getGameunitName();
			$_firstPass = true;
			if(key_exists($_weapon, $weapon_choices_gameunits)){
				array_push($weapon_choices_gameunits[$_weapon], $_detail->getGameunitName());
			}
			else{
				$weapon_choices_gameunits[$_weapon] = [];
				array_push($weapon_choices_gameunits[$_weapon], $_detail->getGameunitName());
				array_push($weapon_choices, $_weapon);
			};
		}
		else if($_detail->getGameunitName() == $_gameunit){
			
		};
	};

	$js_weapon_choices_gameunits = json_encode($weapon_choices_gameunits);

?>

	<!-- <p class="required"><?php // echo $this->__('* Required Fields') ?></p> !-->
	<br>
	<label>Intended Weapon</label>
	<select name="options[weapon]" id="selWeapon" style="width:200px;" onchange="validateWeaponSel(this);">
		<option value=""><?php echo $selText; ?></option>
		<?php foreach($weapon_choices as $weapon) echo '<option value="'. $weapon .'">'. $weapon .'</option>'; ?>
	</select>
	<br>
	<br>
	<label>Desired Game Unit</label>
	<select name="options[gameunit]" id="selGameunit" style="width:200px;" onchange="validateGameunitSel(this);" disabled>
		<option value=""><?php echo $selText; ?></option>
	</select>
	
	<script type="text/javascript">
		
		var weapon_choices_gameunits = <?php echo $js_weapon_choices_gameunits ?>;
	
		function resetGameunits(gameunits){
			// get and empty the current select list
			var sel = document.getElementById("selGameunit");
			sel.options.length = 0;
			
			// add the top option
			var option = document.createElement("option");
			option.text = '<?php echo $selText; ?>';
			sel.add(option);
			
			// roll through the passed array and populate the rest of the options
			gameunits.forEach(function(gu){
				var option = document.createElement("option");
				option.text = String(gu);
				sel.add(option);
			});
			sel.disabled=false;
			var button = document.getElementById("addToCart");
			button.disabled=true;
		};
		
		function validateWeaponSel(me){
			if(me.selectedIndex !=0){
				resetGameunits(weapon_choices_gameunits[me.value]);
			}
			else{
			// disable child elements
				var sel = document.getElementById("selGameunit");
				sel.disabled=true;
				
				var button = document.getElementById("addToCart");
				button.disabled=true;
			};
		};
		
		function validateGameunitSel(me){
			if(me.selectedIndex !=0){
				var sel = document.getElementById("addToCart");
				sel.disabled=false;
			}
			else{ 
				var button = document.getElementById("addToCart");
				button.disabled=true;
			};
		};
	</script>
