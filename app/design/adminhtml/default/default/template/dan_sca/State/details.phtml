<?php 
$gameunit = Mage::registry('current_gameunit');
?>
<div class="details_wrapper">
<!-- Gameunit Details list -->
<style>
a.btn-remove-detail,a.btn-edit-detail{
text-decoration:none;
}
</style>
<table cellspacing="0" class="form-edit">
<tr>
	<!-- list of detail items (left-hand column) !-->
  <td class="detail-list">
    <div class="entry-edit-head">
        <h4 class="icon-head head-customer-detail-list"><?php echo Mage::helper('dan_sca')->__('Gameunit Details') ?></h4>
    </div>
	
    <div class="sub-btn-set"><?php echo $this->getAddNewButtonHtml() ?></div>
	<ul id="detail_list_<?php echo $gameunit->getId(); ?>">
	<?php $animal = Mage::getModel('dan_sca/animal'); ?>
    <?php $_iterator = 0; ?>
    <?php if(count($detailCollection)): ?>
      <?php foreach ($detailCollection as $_detail): ?>
        <li id="detail_item_<?php echo $_detail->getId() ?>">
			
			<!-- top-level info on the current gameunit detail !-->
            <detail>
			  <table>
			    <tr>
				  <td style='min-width:120px'><?php echo $animal->load($_detail->getAnimalId())->getName(); ?></td>
				  <td style='min-width:100px'><?php echo $_detail->getWeapon(); ?></td>
				  <td style='min-width:50px'>
					
				  <!-- edit & delete buttons !-->
				    <a href="#" class="btn-remove-detail">
				      <img src="<?php echo $this->getSkinUrl('images/cancel_icon.gif') ?>" alt="Remove detail" id="delete_button<?php echo ++$_iterator ?>" />
				    </a>
				    <a href="#" id="select_button_<?php echo $_detail->getId() ?>" class="select_button btn-edit-detail">
				      <img src="<?php echo $this->getSkinUrl('images/edit_icon.gif') ?>" alt="Edit detail"/>
				    </a>
				  </td>
				</tr>
			  </table>
            </detail>
        </li>
	  <?php endforeach; ?>
	<?php endif; ?>
	</ul>
  </td>

<!-- Right-hand column -->
  <td>
<!-- Template for adding detail item to list !-->
    <?php $_templatePrefix = $this->getTemplatePrefix() ?>
	<div id="detail_item_template_<?php echo $gameunit->getId(); ?>" class="no-display template">
      <detail>
	  <table>
	    <tr>
		  <td style='min-width:120px'><?php echo Mage::helper('dan_sca')->__('New Gameunit Detail') ?></td>
		  <td style='min-width:100px'></td>
		  <td style='min-width:50px'>
			
		  <!-- edit & delete buttons !-->
		  	  <a href="#" class="btn-remove-detail">
		  	    <img src="<?php echo $this->getSkinUrl('images/cancel_icon.gif') ?>" alt="Remove detail" id="delete_button<?php echo ++$_iterator ?>" />
		  	  </a>
		  	  <a href="#" id="select_button_" class="select_button btn-edit-detail">
		  	    <img src="<?php echo $this->getSkinUrl('images/edit_icon.gif') ?>" alt="Edit detail"/>
		  	  </a>
		  </td>
		</tr>
	  </table>
      </detail>
	  <div class="detail-type"></div>
    </div>

<!-- Detail form template -->
    <div id="detail_form_template_<?php echo $gameunit->getId(); ?>" class="no-display template">
    <?php
        // Set form template elements prefix
        $this->getForm()->setHtmlIdPrefix($_templatePrefix)
			 ->setFieldNameSuffix('detail['.$_templatePrefix.']');
    ?>
    <?php echo $this->getForm()->getHtml() ?>
    <?php echo $this->getCancelButtonHtml() ?>
    </div>

<!-- Details forms -->
    <div class="entry-edit" id="detail_form_container_<?php echo $gameunit->getId(); ?>">
	  <?php if(count($detailCollection)): ?>
		<?php foreach ($detailCollection as $_detail): ?>
		  <div id="form_detail_item_<?php echo $_detail->getId() ?>" style="display:none">
		    <?php
				$this->getForm()->addValues($_detail->getData())
					->setHtmlIdPrefix("_item{$_detail->getId()}")
 					->setFieldNameSuffix('detail['.$_detail->getId().']');
            ?>
            <?php echo $this->getForm()->getHtml() ?>
            <input type="hidden" name="detail[<?php echo $_detail->getId() ?>][_deleted]" id="deleted_detail_item_<?php echo $_detail->getId() ?>" />
          </div>
        <?php endforeach; ?>
      <?php else: ?>
		<div id="no_detail_message_<?php echo $gameunit->getId(); ?>"><?php echo Mage::helper('dan_sca')->__('This gameunit has no saved details.') ?></div>
      <?php endif; ?>
    </div>
  </td>
</tr>
</table>
<script type="text/javascript">
//<![CDATA[
var deleteButtonId = <?php echo $_iterator ?>;

var detailsModel = Class.create();
detailsModel.prototype = {
    initialize : function() {
        this.activeItem   = null;
        this.itemTemplate = $('detail_item_template_<?php echo $gameunit->getId(); ?>');
        this.formTemplate = $('detail_form_template_<?php echo $gameunit->getId(); ?>');
        this.itemContainer= $('detail_list_<?php echo $gameunit->getId(); ?>');
        this.formContainer= $('detail_form_container_<?php echo $gameunit->getId(); ?>');
        this.baseItemId   = 'new_item';

		// *** need to look at
        // this.itemContentTemplate = new Template('<?php // echo $this->helper('dan_sca')->getFormat('js_template')?>');

        this.onNewDetailClick  = this.addNewDetail.bindAsEventListener(this);
        this.onItemMouseOver    = this.itemMouseOver.bindAsEventListener(this);
        this.onItemMouseOut     = this.itemMouseOut.bindAsEventListener(this);
        this.onItemMouseClick   = this.itemMouseClick.bindAsEventListener(this);
        this.onItemFormFieldChange = this.syncFormData.bindAsEventListener(this);

        this.loader = new varienLoader(true);

        this.reloadItemList(1);

        for(var i=0,n=this.itemList.length; i<n; i++){
            if(this.itemList[i].id){
                this.addItemObservers(this.itemList[i]);
                this.initItem(this.itemList[i]);
            }
        }
        if($('add_new_detail_button')){
            Event.observe('add_new_detail_button', 'click', this.onNewDetailClick)
        }

        this.setActiveItem(this.itemList[0]);
    },

    reloadItemList : function(initial){
        this.itemList = $$('#detail_list_<?php echo $gameunit->getId(); ?> li');
        if( initial ) {
            this.itemCount = this.itemList.length;
        }
        if(!this.itemList.length){
            if($('no_detail_message_<?php echo $gameunit->getId(); ?>')){
                $('no_detail_message_<?php echo $gameunit->getId(); ?>').show();
            }
            else {
                this.formContainer.innerHTML+= '<div id="no_detail_message_<?php echo $gameunit->getId(); ?>"><?php echo addslashes(Mage::helper('dan_sca')->__('This gameunit has no saved details.')) ?></div>'
            }
        }
    },

    initItem : function(item){
        if(item && $('form_'+item.id)){
            item.formBlock = $('form_'+item.id);
            Element.hide($('form_'+item.id));
            $('form_'+item.id).statusBar = item;
            $('form_'+item.id).detailItem = item;
        }
    },

    addItemObservers : function(item){
        if(item.id){
            Event.observe(item, 'mouseover', this.onItemMouseOver);
            Event.observe(item, 'mouseout', this.onItemMouseOut);
            Event.observe(item, 'click', this.onItemMouseClick);
        }
    },

    addNewDetail : function(event){
        if(this.canCreateNewDetail){
            this.itemCount++;
            if($('no_detail_message_<?php echo $gameunit->getId(); ?>')){
                $('no_detail_message_<?php echo $gameunit->getId(); ?>').hide();
            }
            // preventing duplication of ids for fields and blocks
            while ($$("div[id='form_detail_item_" + this.itemCount + "']").length) {
                this.itemCount++;
            }
            // create new form elements
            Element.insert(this.formContainer, {bottom:
                '<div id="' + 'form_' + this.baseItemId + this.itemCount + '">'
                + this.prepareTemplate(this.formTemplate.innerHTML)
                + '</div>'
            });

            var newForm = $('form_' + this.baseItemId + this.itemCount);
		
            Element.hide(newForm);
            var template = '<li id="' + this.baseItemId+this.itemCount + '">';
            deleteButtonId ++;
            template    += this.prepareTemplate(this.itemTemplate.innerHTML).replace('delete_button', 'delete_button'+ deleteButtonId);
            template    += '</li>';
            Element.insert(this.itemContainer, {bottom: template});
            var newItem = $(this.baseItemId+this.itemCount);
            newItem.isNewDetail = true;
            newItem.formBlock = newForm;


            newForm.statusBar = newItem;
            newForm.detailItem = newItem;

            this.addItemObservers(newItem);
            this.setActiveItem(newItem);
        }
        this.reloadItemList();
        //Event.stop(event);
    },

    prepareTemplate : function(template){
        return template
            .replace(/<?php echo $_templatePrefix ?>/g, '_item'+this.itemCount)
            .replace(/_counted="undefined"/g, '')
            .replace(/"select_button_"/g, 'select_button_' + this.itemCount)
            ;
    },

    canCreateNewDetail : function(){
        return true;
    },

    itemMouseOver : function(event){
        var element = Event.findElement(event, 'li');
        Element.addClassName(element, 'over');
    },

    itemMouseOut : function(event){
        var element = Event.findElement(event, 'li');
        Element.removeClassName(element, 'over');
    },

    itemMouseClick : function(event){
        if (!Event) {
            return;
        }
        var element = Event.findElement(event, 'li'); // find top item
        var elem = Event.element(event); // exact element clicked

        if ( ((elem.tagName.toUpperCase() == 'A') && elem.id.match(/^delete_button([0-9]*?)$/)) || ((elem.tagName.toUpperCase() == 'IMG') && elem.id.match(/^delete_button([0-9]*?)$/)) ) {
            this.deleteDetail(element);
            Event.stop(event);
        }
        else {
            this.setActiveItem(element);
        }
    },

    toggleDeleteButton : function(item, flag){
        if(flag){
            $(item).select('.btn-remove-detail').each(Element.show);
            $(item.formBlock).getElementsBySelector('.delete-detail').each(Element.show);
        } else {
            $(item).select('.btn-remove-detail').each(Element.hide);
            $(item.formBlock).getElementsBySelector('.delete-detail').each(Element.hide);
        }
    },

    setActiveItem : function(item){
        if(this.activeItem){
            Element.removeClassName(this.activeItem, 'on');
            if($('form_'+this.activeItem.id)){
                Element.hide($('form_'+this.activeItem.id));
            }
        }
        Element.addClassName(item, 'on');

        if(item && $('form_'+item.id)){
            $('form_'+item.id).changeRelation = item;
            $('form_'+item.id).detailItem = item;
            Element.show($('form_'+item.id));
            //new Effect.Appear($('form_'+item.id), {duration : 0.3 });
            //$('form_'+item.id).focus();
            this.addFieldChangeObserver($('form_'+item.id));
        }

        this.activeItem = item;
    },

    getFormContainerFields : function(container){
        var fields = $$( '#' + container.id + ' input','#' + container.id + ' select','#' + container.id + ' textarea');
        return fields;
    },

    addFieldChangeObserver : function(container){
        var fields = this.getFormContainerFields(container);
        for (var i = 0; i < fields.length; i++) {
            Event.observe(fields[i], 'change', this.onItemFormFieldChange);
        }

    },

    syncFormData : function(evt){
        var container = false;

        if(!evt.addClassName) {
            var elm = Event.element(evt);
        } else {
            var elm = evt;
        }

        elm = $(elm);
        while(elm.tagName.toUpperCase() != 'BODY') {
            if(elm.detailItem){
                container = elm;
            }
            elm = $(elm.parentNode);
        }

        if(container){
            var data = {};
            var fields = this.getFormContainerFields(container);
            for(var i=0; i < fields.size(); i++){
                if(fields[i].id){
                    var id = fields[i].id.replace(/^(_item)?[0-9]+/, '');
                    var id = id.replace(/^(id)?[0-9]+/, '');
                    var value = fields[i].getValue();
                    var tagName = fields[i].tagName.toLowerCase();
                    if (tagName == 'select') {
                        if (fields[i].multiple) {
                            var values = $([]);
                            var l = fields[i].options.length;
                            for (j=0; j<l; j++) {
                                var o = fields[i].options[j];
                                if (o.selected === true) {
                                    values[values.length] = o.text.escapeHTML();
                                }
                            }
                            data[id] = values.join(', ');
                        } else {
                            var option = fields[i].options[fields[i].selectedIndex],
                                text   = option.value == '0' || option.value == '' ? '' : option.text;
                            data[id] = text.escapeHTML();
                        }
                    } else if (value !== null) {
                        data[id] = value.escapeHTML();
                    }
                }
            }

            // Set data to html
            var itemContainer = container.detailItem.getElementsBySelector('detail');
            if(itemContainer[0]){
                var html = this.itemContentTemplate.evaluate(data);
                html = html.replace(new RegExp('(<br\\s*/?>\\s*){2,}','img'),'<br/>');
                html = html.replace(new RegExp('<br\\s*/?>(\\s*,){1,}\\s*<br\\s*/?>','ig'),'<br/>');
                html = html.replace(new RegExp('<br\\s*/?>(\\s*,){1,}(.*)<br\\s*/?>','ig'),'<br/>$2<br/>');
                html = html.replace(new RegExp('<br\\s*/?>(.*?)(,\\s*){1,}<br\\s*/?>','ig'),'<br/>$1<br/>');
                html = html.replace(new RegExp('<br\\s*/?>(.*?)(,\\s*){2,}(.*?)<br\\s*/?>','ig'),'<br/>$1, $3<br/>');
                html = html.replace(new RegExp('t:\\s*<br\\s*/?>','ig'),'');
                html = html.replace(new RegExp('f:\\s*<br\\s*/?>','ig'),'');
                html = html.replace(new RegExp('vat:\\s*$','ig'),'');
                itemContainer[0].innerHTML = html;
            }
        }
    },

    deleteDetail : function(item){
        if(confirm('<?php echo Mage::helper('dan_sca')->__('Are you sure you want to delete this detail?') ?>')){
            if (!item.isNewDetail && $('deleted_'+item.id)){
                $('deleted_'+item.id).value = 1;
                if (item.formBlock){
                    item.formBlock.addClassName('ignore-validation');
                }
            }
            if (this.activeItem == item && item != this.itemList[0]) this.setActiveItem(this.itemList[0]);
            if (item == this.itemList[0] && (this.itemList[1])) this.setActiveItem(this.itemList[1]);

            //this.formContainer.removeChild(item.formBlock);
            this.itemContainer.removeChild(item);
            this.reloadItemList();
        }
    },

    cancelAdd : function(button){
        if(confirm('<?php echo addslashes(Mage::helper('dan_sca')->__('Are you sure you want to cancel adding of this detail?')) ?>')){
            var item = $(this.baseItemId + button.id.replace(new RegExp('[a-z_]*',''), ''));

            if( item.isNewDetail){
                if ( this.activeItem == item ) this.formContainer.removeChild(item.formBlock);
            }
            if ( this.activeItem == item && item != this.itemList[0] ) this.setActiveItem(this.itemList[0]);
            if ( item == this.itemList[0] && (this.itemList[1]) ) this.setActiveItem(this.itemList[1]);

            this.itemContainer.removeChild(item);

            this.reloadItemList();
        }
    }
}

gameunitDetails<?php echo $gameunit->getId(); ?> = new detailsModel();
//]]>
</script>
</div>